# Generated by Django 5.2.5 on 2025-08-21 10:07

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('groceries', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Item Type',
                'verbose_name_plural': 'Item Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(choices=[('first_floor', 'First Floor'), ('second_floor', 'Second Floor'), ('basement', 'Basement'), ('storage', 'Storage'), ('freezer', 'Freezer'), ('display', 'Display Area')], max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('sku', models.CharField(blank=True, help_text='Stock Keeping Unit', max_length=50)),
                ('quantity_in_stock', models.PositiveIntegerField(default=0)),
                ('reorder_level', models.PositiveIntegerField(default=10)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_items', to=settings.AUTH_USER_MODEL)),
                ('grocery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='groceries.grocery')),
                ('item_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='items.itemtype')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Items',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['grocery', 'item_type'], name='items_item_grocery_5151c5_idx'), models.Index(fields=['name'], name='items_item_name_1c746e_idx'), models.Index(fields=['price'], name='items_item_price_cb7806_idx'), models.Index(fields=['is_deleted'], name='items_item_is_dele_79eaf1_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('name', 'grocery'), name='unique_active_item_per_grocery')],
            },
        ),
    ]
